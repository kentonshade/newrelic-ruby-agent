## build-ruby poc
name: build-ruby poc

on: ## Event that triggers the workflow - https://docs.github.com/en/actions/reference/events-that-trigger-workflows
  push: 
    branches: [ review ]

jobs:  ## Rememeber run in parallel by default - see https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobs
   build-ruby:  ## Job ID, no job name designated
     runs-on: self-hosted
     strategy:  ## Job matrix - see https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idstrategy
       matrix:  ## Matrix - multiple jobs with variable substitution, they run in PARALLEL (confirm) - convoluted?  hard to monitor?  Refer to logs
         ruby-version: [2.2.10, 2.3.8, 2.4.10, 2.5.8, 2.6.6, 2.7.1, 3.0.0, jruby-9.2.12.0]
     steps:
       - uses: actions/checkout@v2

       - name: Build Ruby ${{ matrix.ruby-version }}
         uses: ./.github/actions/build-ruby  ## Uses action defined in this directory, requitred metadata file: action.yml - inquire as to the use of the JavaAcript (index.js)
         with:  ## Map of input parameters as key:value pairs, set as ENV variables
           ruby-version: ${{ matrix.ruby-version }}  ## Resulting ENV variable: INPUT_RUBY-VERSION - check this, ENV variable values changes with each matrix run?


  # mini-env: ## sequential given the depenedency below (needs build-ruby)
  #   needs: build-ruby ## "needs" - Build-ruby must succeed in order for this job to run
  #   runs-on: ubuntu-18.04
  #   strategy:
  #     fail-fast: false  ## This option will NOT cancel any in-progress jobs, the default is true
  #     matrix: ## key: [values]
  #       rails: [norails, rails61, rails60, rails52, rails51, rails42, rails41, rails40, rails32, rails31, rails30]
  #       ruby-version: [2.2.10, 2.3.8, 2.4.10, 2.5.8, 2.6.6, 2.7.1, 3.0.0, jruby-9.2.12.0]
  #       exclude: ## Remove a jiob defined by the build matrix
  #         - ruby-version: "3.0.0"
  #           rails: rails30
  #         - ruby-version: "3.0.0"
  #           rails: rails31
  #         - ruby-version: "3.0.0"
  #           rails: rails32
  #         - ruby-version: "3.0.0"
  #           rails: rails40
  #         - ruby-version: "3.0.0"
  #           rails: rails41
  #         - ruby-version: "3.0.0"
  #           rails: rails42
  #         - ruby-version: "3.0.0"
  #           rails: rails50
  #         - ruby-version: "3.0.0"
  #           rails: rails51
  #         - ruby-version: "3.0.0"
  #           rails: rails52
  #         - ruby-version: "3.0.0"
  #           rails: rails60
  #         - ruby-version: "3.0.0"
  #           rails: rails61
  #         - ruby-version: "2.7.1"
  #           rails: rails30
  #         - ruby-version: "2.7.1"
  #           rails: rails31
  #         - ruby-version: "2.7.1"
  #           rails: rails32
  #         - ruby-version: "2.7.1"
  #           rails: rails40
  #         - ruby-version: "2.7.1"
  #           rails: rails41
  #         - ruby-version: "2.7.1"
  #           rails: rails42
  #         - ruby-version: "2.7.1"
  #           rails: rails50
  #         - ruby-version: "2.7.1"
  #           rails: rails51
  #         - ruby-version: "2.7.1"
  #           rails: rails52
  #         - ruby-version: "2.6.6"
  #           rails: rails30
  #         - ruby-version: "2.6.6"
  #           rails: rails31
  #         - ruby-version: "2.6.6"
  #           rails: rails32
  #         - ruby-version: "2.6.6"
  #           rails: rails40
  #         - ruby-version: "2.6.6"
  #           rails: rails41
  #         - ruby-version: "2.5.8"
  #           rails: rails30
  #         - ruby-version: "2.5.8"
  #           rails: rails31
  #         - ruby-version: "2.5.8"
  #           rails: rails40
  #         - ruby-version: "2.5.8"
  #           rails: rails41
  #         - ruby-version: "2.4.10"
  #           rails: rails30
  #         - ruby-version: "2.4.10"
  #           rails: rails31
  #         - ruby-version: "2.4.10"
  #           rails: rails40
  #         - ruby-version: "2.4.10"
  #           rails: rails41
  #         - ruby-version: "2.4.10"
  #           rails: rails60
  #         - ruby-version: "2.4.10"
  #           rails: rails61
  #         - ruby-version: "2.3.8"
  #           rails: rails60
  #         - ruby-version: "2.3.8"
  #           rails: rails61
  #         - ruby-version: "2.2.10"
  #           rails: rails60
  #         - ruby-version: "2.2.10"
  #           rails: rails61
  #         - ruby-version: "2.2.10"
  #           rails: rails52
  #         - ruby-version: "jruby-9.2.12.0"
  #           rails: rails30
  #         - ruby-version: "jruby-9.2.12.0"
  #           rails: rails31
  #         - ruby-version: "jruby-9.2.12.0"
  #           rails: rails32
  #         - ruby-version: "jruby-9.2.12.0"
  #           rails: rails40
  #         - ruby-version: "jruby-9.2.12.0"
  #           rails: rails41
  #         - ruby-version: "jruby-9.2.12.0"
  #           rails: rails60
  #         - ruby-version: "jruby-9.2.12.0"
  #           rails: rails61
  #         - ruby-version: "jruby-9.2.12.0"
  #           rails: rails52

  #   steps:  ## kds - Check if these steps occur for EACH instance of the matrix?  Can we not start services at the beginning prior to the start of the matrix?
  #     - uses: actions/checkout@v2

  #     - name: Build Ruby ${{ matrix.ruby-version }}
  #       uses: ./.github/actions/build-ruby
  #       with:
  #         ruby-version: ${{ matrix.ruby-version }}

  #     - name: Start mysql ## kds - ubuntu image has mysql installed, again propose custom image
  #       run: sudo systemctl start mysql

  #     - name: Run Unit Tests
  #       uses: nick-invision/retry@v1.0.0
  #       with:
  #         timeout_minutes: 20
  #         max_attempts: 2
  #         command:  bundle exec rake test:env[${{ matrix.rails }}] TESTOPTS="--verbose"
  #       env:  ## kds - ENV variables can be set once, is this declaring with every run of matrix?  Review logs
  #         DB_PORT: 3306
  #         MYSQL_PASSWORD: root