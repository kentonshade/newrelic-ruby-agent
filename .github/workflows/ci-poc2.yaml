## CI POC2
name: CI POC2

on: ## Event that triggers the workflow - https://docs.github.com/en/actions/reference/events-that-trigger-workflows
  push: 
    branches: [ review ]

jobs:  ## Rememeber run in parallel by default - see https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobs
  container-testing :  ## Job ID, no job name designated
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2

      - name: 01 testing rbenv shell, version and gem list ## add everything here to script files.
        run: |
          rbenv versions
          RBENV_VERSION=2.4.10 rbenv exec gem list --local 
          ruby -v
          # .github/workflows/scripts/multiverse-start-services.sh # These aervice will be already running on the runner.        

  container-testing-2 :  ## Job ID, no job name designated
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v2

      - name: 02 concurrency test  ## add everything here to script files.
        run: |
          rbenv versions
          RBENV_VERSION=3.0.0 rbenv exec gem list --local


  multiverse: ## kds - run this multiverse section to test for build times
    runs-on: self-hosted

    strategy:
      fail-fast: false
      matrix:
        ruby-version: [2.4.10, 2.5.8, 2.6.6, 2.7.1, 3.0.0, jruby-9.2.12.0]
        # exclude:
        #   - ruby-version: "3.0.0"
        #     multiverse: api
        #   - ruby-version: "3.0.0"
        #     multiverse: sinatra
        #   - ruby-version: "3.0.0"
        #     multiverse: rails
        #   - ruby-version: "3.0.0"
        #     multiverse: rails_extras
        #   - ruby-version: "2.7.1"
        #     multiverse: api
        #   - ruby-version: "2.7.1"
        #     multiverse: sinatra
        #   - ruby-version: "jruby-9.2.12.0"
        #     multiverse: agent
    steps:
      - uses: actions/checkout@v2

      - name: ruby version matrix test ${{ matrix.ruby-version }}
        run: |
          echo "superficial change to test build - 1.0"
          RBENV_VERSION=${{ matrix.ruby-version }} rbenv exec gem list --local


  multiverse-2: ## kds - run this multiverse section to test for build times
    runs-on: self-hosted

    strategy:
      fail-fast: false
      matrix:
        multiverse: [agent]
        ruby-version: [2.4.10]
        # exclude:
        #   - ruby-version: "3.0.0"
        #     multiverse: api
        #   - ruby-version: "3.0.0"
        #     multiverse: sinatra
        #   - ruby-version: "3.0.0"
        #     multiverse: rails
        #   - ruby-version: "3.0.0"
        #     multiverse: rails_extras
        #   - ruby-version: "2.7.1"
        #     multiverse: api
        #   - ruby-version: "2.7.1"
        #     multiverse: sinatra
        #   - ruby-version: "jruby-9.2.12.0"
        #     multiverse: agent
    steps:
      - uses: actions/checkout@v2

      - name: Run Multiverse Tests
        uses: nick-invision/retry@v1.0.0
        with:
          timeout_minutes: 60
          max_attempts: 2
          command:  RBENV_VERSION=${{ matrix.ruby-version }} rbenv exec bundle exec rake test:multiverse[group=${{ matrix.multiverse }},verbose]
        env:
          DB_PORT: 3306
          MYSQL_PASSWORD: root

      - name: Annotate errors
        if: ${{ failure() }}
        uses: ./.github/actions/annotate    

  


      

      # - name: 02 set path variables ## need to add path variables
      #   run: printenv

      # - name: 02 Command check ## need to add path variables
      #   run: |
      #     printenv
      #     ## Set the ruby version via rbenv shell
      #     eval "$(rbenv init -)"
      #     rbenv shell 3.0.0
      #     ruby -v
      #     bundle --verion
      #     rbenv shell -
      #     ruby -v
      #     # ls -la && (cd /3.0.0 && rbenv local)
      #     # (cd /3.0.0 && gem list --local)  ## checking command without rbenv exec
      #     # (cd /3.0.0 && rbenv exec bundle --version)

      # - name: 03 list gems  ## need to add path avariables
      #   run: |
      #     (cd /2.4.10 && rbenv local)
      #     (cd /2.4.10 && gem list --local) ## do not use the rbenv command for gem, that is for THIS command.